name: CI/CD - Construir e Publicar Imagens Docker

#gatilho
on:
  #roda toda vez que fizer 'git push' para a branch 'main'
  push:
    branches: [ "main" ]
  
  #permite que você rode este workflow manualmente na aba "Actions" do GitHub
  workflow_dispatch:

#Jobs, ações que seram realizadas
jobs:
  lint:
    name: Lint Frontend and Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # --- LINT DO FRONTEND ---
      - name: Install Frontend Dependencies
        # A flag --prefix diz ao npm para correr na sub-pasta 'frontend'
        run: npm ci --prefix frontend

      - name: Run ESLint (Frontend)
        # Corre o script 'lint' definido no 'frontend/package.json'
        run: npm run lint --prefix frontend

      # --- LINT DO BACKEND ---
      - name: Install Backend Dependencies
        # A flag --prefix diz ao npm para correr na sub-pasta 'backend'
        run: npm ci --prefix backend

      - name: Run ESLint (Backend)
        # Corre o script 'lint' definido no 'backend/package.json'
        run: npm run lint --prefix backend

  build-and-push:
    name: Build and push
    #a automação vai rodar em uma máquina virtual Linux fornecida pelo GitHub
    runs-on: ubuntu-latest
    needs: lint #precisa que o lint tenha passado para que o build e push ocorram 

    #sequência de tarefas a serem executadas
    steps:
      #baixar o código
      - name: Checkout do código
        uses: actions/checkout@v4

      #fazer login no Docker Hub
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #construir e enviar a imagem do Backend
      - name: Construir e enviar a imagem do Backend
        uses: docker/build-push-action@v5
        with:
          #'context' diz onde está o Dockerfile para esta imagem
          context: ./backend
          #'push: true' significa que, após construir, ele deve enviar para o Docker Hub.
          push: true
          #'tag' é o nome que a imagem terá no Docker Hub.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todolist-backend:latest

      #construir e enviar a imagem do Frontend
      - name: Construir e enviar a imagem do Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todolist-frontend:latest